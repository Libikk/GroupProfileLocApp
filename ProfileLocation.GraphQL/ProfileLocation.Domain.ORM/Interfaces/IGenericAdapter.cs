// <copyright file="IAdapter.cs" company="Victor Saly">
// Copyright (c) Victor Saly. All rights reserved.
// </copyright>
// <auto-generated />
using System;
using System.Collections.Generic;
using System.Linq.Expressions;

namespace ProfileLocation.Domain.ORM.Interfaces
{
    public interface IAdapter<TEntity, TModel> where TEntity : class, new() where TModel : class
    {
        void Adapt(TEntity fromValue, TModel toValue);
        void Adapt(TModel fromValue, TEntity toValue);

        void Adapt(IEnumerable<TEntity> fromValues, IList<TModel> toValues);
        void Adapt(IEnumerable<TModel> fromValues, IList<TEntity> toValues);

        TEntity Adapt(TModel fromValue);
        TModel Adapt(TEntity fromValue);

        IList<TModel> Adapt(IEnumerable<TEntity> fromValues);
        IList<TEntity> Adapt(IEnumerable<TModel> fromValues);

        Expression<Func<TEntity, bool>> Adapt(Expression<Func<TModel, bool>> predicate);
        Expression<Func<TEntity, object>>[] Adapt(params Expression<Func<TModel, object>>[] predicates);
    }
}