// <copyright file="GraphQLConfigExtension.cs" company="Victor Saly">
// Copyright (c) Victor Saly. All rights reserved.
// </copyright>
// <auto-generated />
using System;
using GraphQL.Server;
using GraphQL.Types;
using GraphQL.Utilities;
using Microsoft.Extensions.DependencyInjection;
using ProfileLocation.WebAPI.Models.GraphQL.Shared;

namespace ProfileLocation.WebAPI.ExtensionMethods
{
    public static class GraphQLConfigExtension
    {
        public static void AddGraphQLConfig(this IServiceCollection services)
        {
            services.AddTransient<ShortGraphType>();
            services.AddTransient<ObjectGraphType>();
            services.AddTransient<StringSearchType>();
            services.AddTransient<StringSearchMethodEnumType>();
            services.AddTransient<NumberSearchMethodEnumType>();
            services.AddTransient<SearchOperatorEnumType>();
            services.AddTransient<SortOrderEnumType>();
            services.AddTransient<IntSearchType>();
            services.AddTransient<DateTimeSearchType>();
            services.AddTransient<FloatSearchType>();
            services.AddTransient<BooleanSearchType>();
            services.AddTransient(typeof(ScalarSearchType<>));

            services.AddGraphQL(options =>
            {
                options.EnableMetrics = false;
                options.ExposeExceptions = true;
            })
                .AddWebSockets()
                .AddDataLoader();



            GraphTypeTypeRegistry.Register<short, ShortGraphType>();
            GraphTypeTypeRegistry.Register<DateTime, DateTimeGraphType>();
        }
    }
}